name: Deploy to Production and Development

on:
  push:
    branches:
      - main  # Deploys to production
      - dev   # Deploys to development
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Generate version
      id: version
      run: |
        TZ=Europe/Berlin date +'%Y.%m.%d.%H%M'
        echo "BUILD_VERSION=$(TZ=Europe/Berlin date +'%Y.%m.%d.%H%M')-${GITHUB_SHA::7}" >> $GITHUB_ENV
    
    # Determine environment
    - name: Set environment variables
      id: env_vars
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=production" >> $GITHUB_ENV
          echo "SSH_HOST=89.47.162.7" >> $GITHUB_ENV
          echo "SSH_USER=ubuntu" >> $GITHUB_ENV
          echo "DEPLOY_PATH=~/apps/hfss_live" >> $GITHUB_ENV
          echo "BRANCH=main" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
          echo "ENVIRONMENT=development" >> $GITHUB_ENV
          echo "SSH_HOST=ssh.hikeandfly.app" >> $GITHUB_ENV
          echo "SSH_USER=${{ secrets.DEV_SSH_USERNAME }}" >> $GITHUB_ENV
          echo "DEPLOY_PATH=~/apps/hfss_dev" >> $GITHUB_ENV
          echo "BRANCH=dev" >> $GITHUB_ENV
        fi
    
    # Deploy to production (direct SSH)
    - name: Deploy to production
      if: env.ENVIRONMENT == 'production'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USER }}
        key: ${{ secrets.TIME4VPS }}
        script: |
          export HOSTNAME=$(hostname)
          cd ${{ env.DEPLOY_PATH }}
          git pull origin ${{ env.BRANCH }}
          docker-compose down
          docker-compose up -d --build
          echo "Deployed successfully to production on host $HOSTNAME"
    
    # Deploy to development (using Cloudflare action)
    - name: Deploy to development
      if: env.ENVIRONMENT == 'development'
      uses: cloudflare/cloudflared-tunnel-action@v1
      with:
        hostname: ${{ env.SSH_HOST }}
        service_token_id: ${{ secrets.CLOUDFLARE_ACCESS_CLIENT_ID }}
        service_token_secret: ${{ secrets.CLOUDFLARE_ACCESS_CLIENT_SECRET }}
        script: |
          # Set up SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Run SSH commands through the tunnel
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} << EOF
            export HOSTNAME=\$(hostname)
            cd ${{ env.DEPLOY_PATH }}
            git pull origin ${{ env.BRANCH }}
            docker-compose down
            docker-compose up -d --build
            echo "Deployed successfully to development on host \$HOSTNAME"
          EOF